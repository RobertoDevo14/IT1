name: Terraform Deploy

on:
  push:
    branches:
      - master  # o la rama que uses

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5  # o la que uses
      
      - name: Install jq
        run: sudo apt-get install -y jq
      
      - name: Install sqlcmd v2 from GitHub Releases (with jq)
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y curl apt-transport-https gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> $GITHUB_ENV
          /opt/mssql-tools18/bin/sqlcmd -?
          
          
      - name: Validate sqlcmd is available
        run: |
          echo "Checking sqlcmd availability..."
          if [ ! -x /opt/mssql-tools18/bin/sqlcmd ]; then
            echo "sqlcmd not found or not executable at /opt/mssql-tools18/bin/sqlcmd"
            exit 1
          fi

          /opt/mssql-tools18/bin/sqlcmd -? || {
            echo "sqlcmd exists but failed to execute"
            exit 1
          }

          echo "sqlcmd is ready and working"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.AZURE_SECRET }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.AZURE_SECRET }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}"